*YAML (.yml)*
Особенности:

Обладает человекопонимаемым кодом;
Имеет минималистичный синтаксис;
Ориентирован на работу с данными;
Включает в себя структуру, напоминающую JSON (YAML находится в расширенной версии JSON);
Позволяет добавлять комментарии;
Поддерживает использование строк без кавычек;
Считается более «чистым» в сравнении с JSON;
Предоставляет дополнительные возможности, такие как расширяемые типы данных, относительные якоря и сохранение порядка ключей.
Применение: YAML оптимально подходит для приложений с обширным объемом данных, которые основаны на DevOps-процессах или 
используют виртуальные машины. 
Повышенная читаемость данных оказывается особенно полезной в командах, где разработчики регулярно взаимодействуют с этими данными.

*JSON*
Особенности:

Требует больше усилий для чтения;
Синтаксис имеет жесткие и четкие требования;
Подобен встроенному стилю YAML (некоторые парсеры YAML могут интерпретировать JSON-файлы);
Отсутствует возможность добавления комментариев;
Строки должны быть обрамлены двойными кавычками.
Применение: JSON применяется в веб-разработке, представляя наилучший формат для сериализации и передачи данных через HTTP-соединение.

*XML*
Особенности:

Требует больше усилий для чтения;
Обладает более сложной структурой;
Выполняет функцию языка разметки, в то время как YAML используется для форматирования данных;
Предоставляет больший спектр возможностей, например, использование атрибутов тегов;
Обладает более жёсткой схемой документа.
Применение: XML идеально подходит для сложных проектов, требующих тщательного контроля над валидацией, 
схемой и пространством имен. XML имеет низкую читаемость, потребляет больше пропускной способности и требует 
больше места для хранения данных, но при этом предоставляет непревзойдённый уровень контроля.